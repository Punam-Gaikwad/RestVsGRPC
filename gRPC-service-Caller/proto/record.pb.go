// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/record.proto

package record

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Year                 int32    `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	ImdbID               string   `protobuf:"bytes,3,opt,name=imdbID,proto3" json:"imdbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf385066b05fb7a3, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Record) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Record) GetImdbID() string {
	if m != nil {
		return m.ImdbID
	}
	return ""
}

type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf385066b05fb7a3, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type GetResponse struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf385066b05fb7a3, []int{2}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "record.Record")
	proto.RegisterType((*Request)(nil), "record.Request")
	proto.RegisterType((*GetResponse)(nil), "record.GetResponse")
}

func init() { proto.RegisterFile("proto/record.proto", fileDescriptor_cf385066b05fb7a3) }

var fileDescriptor_cf385066b05fb7a3 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4a, 0x4d, 0xce, 0x2f, 0x4a, 0xd1, 0x03, 0x73, 0x84, 0xd8, 0x20, 0x3c, 0x29,
	0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc, 0xfc,
	0x92, 0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0x2a, 0x25, 0x2f, 0x2e, 0xb6, 0x20, 0xb0, 0x3a,
	0x21, 0x11, 0x2e, 0xd6, 0x92, 0xcc, 0x92, 0x9c, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x08, 0x47, 0x48, 0x88, 0x8b, 0xa5, 0x32, 0x35, 0xb1, 0x48, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35,
	0x08, 0xcc, 0x16, 0x12, 0xe3, 0x62, 0xcb, 0xcc, 0x4d, 0x49, 0xf2, 0x74, 0x91, 0x60, 0x06, 0x2b,
	0x85, 0xf2, 0x94, 0x38, 0xb9, 0xd8, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0xcc, 0xb9,
	0xb8, 0xdd, 0x53, 0x4b, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x34, 0xb8, 0xd8,
	0x21, 0xae, 0x29, 0x96, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0xe2, 0xd3, 0x83, 0xba, 0x15, 0x62,
	0x79, 0x10, 0x4c, 0xda, 0x28, 0x96, 0x8b, 0x0f, 0x22, 0x54, 0x1c, 0x9c, 0x5a, 0x54, 0x96, 0x99,
	0x9c, 0x2a, 0xe4, 0xcd, 0xc5, 0x05, 0x36, 0x0a, 0x2c, 0x28, 0xc4, 0x8f, 0xd0, 0x08, 0xb6, 0x49,
	0x4a, 0x18, 0x26, 0x80, 0x64, 0x9f, 0x92, 0x78, 0xd3, 0xe5, 0x27, 0x93, 0x99, 0x04, 0x85, 0xf8,
	0xc1, 0xbe, 0x2e, 0x33, 0x84, 0x86, 0x4c, 0x71, 0x12, 0x1b, 0xd8, 0xd7, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xdb, 0xe6, 0xa8, 0xb0, 0x31, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecordsServiceClient is the client API for RecordsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordsServiceClient interface {
	GetRecords(ctx context.Context, in *Request, opts ...grpc.CallOption) (*GetResponse, error)
}

type recordsServiceClient struct {
	cc *grpc.ClientConn
}

func NewRecordsServiceClient(cc *grpc.ClientConn) RecordsServiceClient {
	return &recordsServiceClient{cc}
}

func (c *recordsServiceClient) GetRecords(ctx context.Context, in *Request, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/record.RecordsService/GetRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordsServiceServer is the server API for RecordsService service.
type RecordsServiceServer interface {
	GetRecords(context.Context, *Request) (*GetResponse, error)
}

// UnimplementedRecordsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecordsServiceServer struct {
}

func (*UnimplementedRecordsServiceServer) GetRecords(ctx context.Context, req *Request) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecords not implemented")
}

func RegisterRecordsServiceServer(s *grpc.Server, srv RecordsServiceServer) {
	s.RegisterService(&_RecordsService_serviceDesc, srv)
}

func _RecordsService_GetRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordsServiceServer).GetRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/record.RecordsService/GetRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordsServiceServer).GetRecords(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "record.RecordsService",
	HandlerType: (*RecordsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRecords",
			Handler:    _RecordsService_GetRecords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/record.proto",
}
